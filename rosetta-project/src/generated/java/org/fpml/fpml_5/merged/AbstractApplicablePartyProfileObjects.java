//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package org.fpml.fpml_5.merged;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * An abstract base type that combines objects applicable to the description of a party profile (e.g. applicable assets and cash evets to specific contacts or settlement instructions).
 * 
 * <p>Java class for AbstractApplicablePartyProfileObjects complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AbstractApplicablePartyProfileObjects"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="identifier" type="{http://www.fpml.org/FpML-5/merged}AssociationToAssetIdentifier"/&gt;
 *         &lt;sequence&gt;
 *           &lt;element name="applicableAssets" type="{http://www.fpml.org/FpML-5/merged}ApplicableAssets" minOccurs="0"/&gt;
 *           &lt;element name="applicableTransactions" type="{http://www.fpml.org/FpML-5/merged}ApplicableTransactionType" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;/sequence&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AbstractApplicablePartyProfileObjects", propOrder = {
    "identifier",
    "applicableAssets",
    "applicableTransactions"
})
@XmlSeeAlso({
    ApplicableCommunicationDetails.class,
    ApplicableSettlementInstructionDetails.class
})
public abstract class AbstractApplicablePartyProfileObjects {

    @XmlElement(required = true)
    protected AssociationToAssetIdentifier identifier;
    protected ApplicableAssets applicableAssets;
    protected List<ApplicableTransactionType> applicableTransactions;

    /**
     * Gets the value of the identifier property.
     * 
     * @return
     *     possible object is
     *     {@link AssociationToAssetIdentifier }
     *     
     */
    public AssociationToAssetIdentifier getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link AssociationToAssetIdentifier }
     *     
     */
    public void setIdentifier(AssociationToAssetIdentifier value) {
        this.identifier = value;
    }

    /**
     * Gets the value of the applicableAssets property.
     * 
     * @return
     *     possible object is
     *     {@link ApplicableAssets }
     *     
     */
    public ApplicableAssets getApplicableAssets() {
        return applicableAssets;
    }

    /**
     * Sets the value of the applicableAssets property.
     * 
     * @param value
     *     allowed object is
     *     {@link ApplicableAssets }
     *     
     */
    public void setApplicableAssets(ApplicableAssets value) {
        this.applicableAssets = value;
    }

    /**
     * Gets the value of the applicableTransactions property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the applicableTransactions property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getApplicableTransactions().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ApplicableTransactionType }
     * 
     * 
     */
    public List<ApplicableTransactionType> getApplicableTransactions() {
        if (applicableTransactions == null) {
            applicableTransactions = new ArrayList<ApplicableTransactionType>();
        }
        return this.applicableTransactions;
    }

}
