//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.10.10 at 10:22:54 AM BST 
//


package org.fpml.fpml_5.merged;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LoanTradingAccrualSettlementEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="LoanTradingAccrualSettlementEnum"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *     &lt;enumeration value="Flat"/&gt;
 *     &lt;enumeration value="SettledWithAccrued"/&gt;
 *     &lt;enumeration value="SettledWithoutAccrued"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "LoanTradingAccrualSettlementEnum")
@XmlEnum
public enum LoanTradingAccrualSettlementEnum {


    /**
     * Trades flat.
     * 
     */
    @XmlEnumValue("Flat")
    FLAT("Flat"),

    /**
     * Settled with Accrued Interest: Interest accrued during the settlement period is paid at settlement.
     * 
     */
    @XmlEnumValue("SettledWithAccrued")
    SETTLED_WITH_ACCRUED("SettledWithAccrued"),

    /**
     * Settled without Accrued Interest: Interest accrued during for the settlement period is not paid at settlement.
     * 
     */
    @XmlEnumValue("SettledWithoutAccrued")
    SETTLED_WITHOUT_ACCRUED("SettledWithoutAccrued");
    private final String value;

    LoanTradingAccrualSettlementEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LoanTradingAccrualSettlementEnum fromValue(String v) {
        for (LoanTradingAccrualSettlementEnum c: LoanTradingAccrualSettlementEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
