//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.10.08 at 01:55:01 PM BST 
//


package org.fpml.fpml_5.merged;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LoanTradingNonRecurringFeeTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LoanTradingNonRecurringFeeTypeEnum"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *     &lt;enumeration value="Amendment"/&gt;
 *     &lt;enumeration value="Consent"/&gt;
 *     &lt;enumeration value="Facility"/&gt;
 *     &lt;enumeration value="FacilityExension"/&gt;
 *     &lt;enumeration value="Upfront"/&gt;
 *     &lt;enumeration value="Waiver"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "LoanTradingNonRecurringFeeTypeEnum")
@XmlEnum
public enum LoanTradingNonRecurringFeeTypeEnum {


    /**
     * Calculated as a percentage of the global commitment amount of a facility.
     * 
     */
    @XmlEnumValue("Amendment")
    AMENDMENT("Amendment"),
    @XmlEnumValue("Consent")
    CONSENT("Consent"),

    /**
     * Calculated as a percentage of the unutilized portion of the facility.
     * 
     */
    @XmlEnumValue("Facility")
    FACILITY("Facility"),

    /**
     * An on-going (accrual) fee paid to the Issuing Bank for a Letter of Credit. This is separate from the basic Letter of Credit Fee paid to the lender group.
     * 
     */
    @XmlEnumValue("FacilityExension")
    FACILITY_EXENSION("FacilityExension"),

    /**
     * Calculated as a percentage of the utilized portion of the facility. This fee type is subject to banding rules â€“ different portions of the utilization amount may be subject to different percentages.
     * 
     */
    @XmlEnumValue("Upfront")
    UPFRONT("Upfront"),
    @XmlEnumValue("Waiver")
    WAIVER("Waiver");
    private final String value;

    LoanTradingNonRecurringFeeTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LoanTradingNonRecurringFeeTypeEnum fromValue(String v) {
        for (LoanTradingNonRecurringFeeTypeEnum c: LoanTradingNonRecurringFeeTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
